# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v1.2. To use this config, the firmware should be compiled for the
# STM32F103 with a "28KiB bootloader". Also, select "Enable extra
# low-level configuration options" and configure "GPIO pins to set at
# micro-controller startup" to "!PC13".

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See the example.cfg file for a description of available parameters.

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 64
rotation_distance: 40
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: -38
position_max: 238
position_endstop: -38
homing_speed: 50
homing_retract_dist: 0

[tmc2209 stepper_x]
uart_pin: PB15
diag_pin: PC0
run_current: 1.00
stealthchop_threshold: 999999
driver_SGTHRS: 120

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 64
rotation_distance: 40
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: -40
position_max: 250
position_endstop: 250
homing_speed: 50
homing_retract_dist: 0

[tmc2209 stepper_y]
uart_pin: PC6
diag_pin: PC1
run_current: 1.00
stealthchop_threshold: 999999
driver_SGTHRS: 120

[stepper_z]
step_pin: PB0
dir_pin: !PC5
enable_pin: !PB1
microsteps: 64
rotation_distance: 8
#endstop_pin: probe:z_virtual_endstop
#endstop_pin: PC14
endstop_pin: tmc2209_stepper_z:virtual_endstop
position_min: -3
position_max: 254
#position_endstop: -2
homing_speed: 20
homing_retract_dist: 0

[tmc2209 stepper_z]
uart_pin: PC10
diag_pin: PC15
run_current: 1.2
stealthchop_threshold: 999999
driver_SGTHRS: 100

[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD2
microsteps: 64
rotation_distance: 22.905740611 #22.6789511
gear_ratio: 50:17
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PA0
#control = pid
#pid_kp = 19.196
#pid_ki = 0.735
#pid_kd = 125.251
min_temp: -50
max_temp: 300
min_extrude_temp: 0
#pressure_advance: 0.034
#pressure_advance_smooth_time: 0.03
max_extrude_cross_section: 101
max_extrude_only_distance: 100

[tmc2209 extruder]
uart_pin: PC11
run_current: 0.650
stealthchop_threshold: 0

[verify_heater extruder]
max_error: 120
check_gain_time: 60
hysteresis: 5
heating_gain: 2

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC3
control: pid
pid_Kp: 73.643
pid_Ki: 1.648
pid_Kd: 822.964
min_temp: 0
max_temp: 130

[fan]
pin: PA8
#kick_start_time: 0.800
#cycle_time: 0.010
cycle_time: 0.06
max_power: 0.5

[mcu]
serial: /dev/ttyAMA0
baud: 250000
restart_method: command

[mcu rpi]
serial: /tmp/klipper_host_mcu

[printer]
kinematics: corexy
max_velocity: 516
max_accel: 10008
max_z_velocity: 33
max_z_accel: 100

[static_digital_output usb_pullup_enable]
pins: !PC13

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5, EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PB6, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB7, EXP1_10=<5V>

[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

[output_pin _BEEPER_pin]
pin: EXP1_1
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001

[bltouch]
sensor_pin: ^PC2
control_pin: PA1
x_offset: 0
y_offset: -30
#z_offset = 3.590
#pin_move_time: 0.4
pin_up_touch_mode_reports_triggered: False
#pin_up_reports_not_triggered: False
#set_output_mode: 5V
sample_retract_dist: 2.0
speed: 50
lift_speed: 50
probe_with_touch_mode: True
stow_on_each_sample: False 

[idle_timeout]
timeout: 1800

[bed_mesh]
speed: 50
horizontal_move_z: 6
mesh_min: 10,10
mesh_max: 225,215
probe_count: 12,12
algorithm: bicubic
mesh_pps: 3,3
bicubic_tension: 0.4
#fade_start: 1
#fade_end: 10
#fade_target: 0

[screws_tilt_adjust]
screw1: 32,65
screw1_name: front left screw
screw2: 202,65
screw2_name: front right screw
screw3: 202,235
screw3_name: rear right screw
screw4: 32,235
screw4_name: rear left screw
horizontal_move_z: 10
speed: 200
screw_thread: CW-M4

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points: 90,80,20  #belts  middle'ish

[input_shaper]
shaper_freq_x: 57.0
shaper_type_x: zv
shaper_freq_y: 60.8
shaper_type_y: zv
#shaper_freq_x: 87.6
#shaper_type_x: 2hump_ei
#damping_ratio_x: 0.028
#shaper_freq_y: 58.0
#shaper_type_y: ei
#damping_ratio_y: 0.021

[gcode_arcs]
resolution: 0.6

[force_move]
enable_force_move: true

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[pause_resume]

[display_status]

[exclude_object]

[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[shaketune]
# https://github.com/Frix-x/klippain-shaketune/blob/main/docs/README.md
result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
number_of_results_to_keep: 10
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
timeout: 600
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

#[gcode_button kill_switch]
#pin: PC14
##pin: tmc2209_stepper_z:virtual_endstop
#press_gcode:
#  M104 S0 ; turn off temperature
#  M140 S0 ; turn off temperature of bed (MD)
#  M106 S0 ; turn off cooling fan
#  G91 ; use relative positioning for the XYZ axes
#  G1 Z20 F30000 ; lift up
#  M84  ; disable motors
#  M112 ; emergancy stop

[gcode_macro UNSAFE_MOVE_Z]
description: Lower the bed 10mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=0
  G0 Z20 F600
  M84

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000

    # Home
    G28 X
    # Move away
    G91
    G1 X6 F1200
    G90
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-6 F1200
    G90

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Z]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_Z = printer.configfile.settings['tmc2209 stepper_z'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={HOME_CURRENT}

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000

    # Home
    G28 Z

    #Use bed mesh  
    BED_MESH_PROFILE LOAD=default
    
    # Move away
    G91
    G1 Z20
    G90

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={RUN_CURRENT_Z}

[homing_override]
axes: xyz
gcode:
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
  
  #M300
  # sleep (ms)
  G4 P500

  {% if home_all %}
    UNSAFE_MOVE_Z
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %} 
 
  {% if home_all or 'Z' in params %}
    _HOME_Z
  {% endif %}
  #M300

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(0) %}      #edit to your park position
    {% set y = params.Y|default(-20) %}      #edit to your park position
    {% set z = params.Z|default(30)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    MD_UNLOADFIL DISABLE=1
    TURN_OFF_HEATERS
    M106 S0
    CANCEL_PRINT_BASE
    M18

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BASE_BED_MESH_CALIBRATE
gcode:
  {% set max_velocity = printer.configfile.settings['printer'].max_velocity * 60 %}
  BED_MESH_CLEAR
  #G28
  G1 X0 Y30 Z40 F{max_velocity}
  BASE_BED_MESH_CALIBRATE
  BED_MESH_OUTPUT
  G1 X116 Y235 Z40 F{max_velocity}

[gcode_macro MD_CALIBRATE_SCREWS]
gcode:
  #G28
  SCREWS_TILT_CALCULATE
  #M18

[gcode_macro MD_WARMUPPOS]
gcode:
  {% set max_velocity = printer.configfile.settings['printer'].max_velocity * 60 %}
  G28
  G90; absolute
  G1 X0 Y-20 Z40 F{max_velocity} ; this is a good start heating position

[gcode_macro MD_PRIME]
gcode:
  #M117 Prime Line
  G90; absolute
  G92 E0 ;Reset Extruder
  # move z axis
  G1 Y0 Z2.0 F1500 ;Move Z Axis up and Y out
  # move to prime position
  G1 X1.45 Y0 Z0.28 F1500 ;Move to start position
  G1 X1.45 Y120 Z0.28 F1500 E9 ;Draw the first line (slightly under extrude)
  G1 X2.20 Y120 Z0.28 F5000 ;Move to side a little
  G1 X2.20 Y30 Z0.28 F1500 E18 ;Draw the second line (slightly over extrude)
  G92 E0 ;Reset Extruder

[gcode_macro MD_STARTPRINT]
gcode:
  {% set bedtemp = params.BED_TEMP|default(70)|float %}
  {% set extrudertemp = params.EXTRUDER_TEMP|default(210)|float %}
  # Start bed heating and continue
  M140 S{bedtemp}
  M104 S{extrudertemp}
  # Use the bed mesh 
  BED_MESH_PROFILE LOAD=default
  # Move the nozzle near the bed
  MD_WARMUPPOS
  # Start bed heating and continue
  M190 S{bedtemp}
  M109 S{extrudertemp}
  MD_LOADFIL
  MD_PRIME
  #M117 Printing...

[gcode_macro MD_PRINTDONE]
gcode:
  #M117 Done printing :)
  # move z up
  G91
  G1 E-3 Z+10 F3000
  G91 ; use relative positioning for the XYZ axes
  G1 Z20 F5000
  G90 ; use absolute positioning for the XYZ axes
  G1 X115 Y212 F5000 ; move bed forward and center x (MD)
  MD_UNLOADFIL DISABLE=0
  M104 S0 ; turn off temperature
  M140 S0 ; turn off temperature of bed (MD)
  M106 S0 ; turn off cooling fan
  M84 ; disable motors
  BED_MESH_CLEAR

[gcode_macro MD_LOADFIL]
gcode:
  #M117 Load Fillament
  G91
  G1 E30 F1200
  G1 E20 F600
  G1 E-6 F1200
  G90

[gcode_macro MD_UNLOADFIL]
gcode:
  {% set disable = params.DISABLE|default(1)|float %}
  #M117 Unload Fillament
  G91
  G1 E2 F1200
  G1 E-5 F150
  G1 E-20 F300
  G1 E-15 F1200
  {% if disable > 0 %}
    M84 E
  {% endif %}
  G90

[gcode_macro MD_EXERCISE]
gcode:
  {% set repeat_fan = params.REPEAT_FAN|default(0)|int %}
  {% set repeat_x = params.REPEAT_X|default(4)|int %}
  {% set repeat_y = params.REPEAT_Y|default(4)|int %}
  {% set repeat_c = params.REPEAT_C|default(8)|int %}
  {% set repeat_z = params.REPEAT_Z|default(0)|int %}
  {% set max_velocity = printer.configfile.settings['printer'].max_velocity * 60 %}
  {% set max_z_velocity = printer.configfile.settings['printer'].max_z_velocity * 60 %}
  {% set x_min = printer.configfile.settings['stepper_x'].position_min + 20 %}
  {% set x_max = printer.configfile.settings['stepper_x'].position_max - 20 %}
  {% set x_mid = ( printer.configfile.settings['stepper_x'].position_max + printer.configfile.settings['stepper_x'].position_min ) / 2 %}
  {% set y_min = printer.configfile.settings['stepper_x'].position_min + 20 %}
  {% set y_max = printer.configfile.settings['stepper_x'].position_max - 20 %}
  {% set y_mid = ( printer.configfile.settings['stepper_x'].position_max + printer.configfile.settings['stepper_x'].position_min ) / 2 %}
  {% set z_home = printer.configfile.settings['stepper_z'].position_min + 12 %}
  {% set z_min = printer.configfile.settings['stepper_z'].position_min + 50 %}
  {% set z_max = printer.configfile.settings['stepper_z'].position_max - 100 %}
  #G28
  G1 X{x_mid} Y{y_mid} Z{z_home} F{3*max_velocity/4}

  {% if repeat_fan > 0 %}
    {% for i in range(repeat_fan) %}
      M106 S255
      G4 P800
      M106 S0
      G4 P200
    {% endfor %}
  {% endif %}

  {% if repeat_y > 0 %}
    {% for i in range(repeat_y) %}
      G1 Y{y_min} F{max_velocity}
      G1 Y{y_max} F{max_velocity}
    {% endfor %}
  {% endif %}

  {% if repeat_x > 0 %}
    G1 X{x_mid} Y{y_mid} F{max_velocity}
    {% for i in range(repeat_x) %}
      G1 X{x_min} F{max_velocity}
      G1 X{x_max} F{max_velocity}
    {% endfor %}
  {% endif %}
  
  {% if repeat_c > 0 %}
    G1 X{x_mid/2} Y{y_mid} F{max_velocity}
    {% for i in range(repeat_c) %}
      G2 X{3*x_mid/2} Y{y_mid} I{x_mid/2} J{x_mid/2} F{max_velocity}
      G2 X{x_mid/2} Y{y_mid} I{0-x_mid/2} J{x_mid/2} F{max_velocity}
    {% endfor %}  
  {% endif %}

  {% if repeat_z > 0 %}
    G1 X{x_mid} Y{y_mid} F{max_velocity}
    {% for i in range(repeat_z) %}
      G1 Z{z_max} F{max_z_velocity}
      G1 Z{z_min} F{max_z_velocity}
    {% endfor %}
    G1 Z{z_home} F{max_z_velocity/12} 
  {% endif %}

  G1 X{x_mid} Y{y_mid} F{max_velocity}
  G1 Z{z_home} F{max_z_velocity/12} 
  
# load filament
[gcode_macro M701]
gcode:
  SAVE_GCODE_STATE NAME=loading_filament
  MD_LOADFIL
  RESTORE_GCODE_STATE NAME=loading_filament

# unload filament
[gcode_macro M702]
gcode:
  SAVE_GCODE_STATE NAME=unloading_filament
  MD_UNLOADFIL DISABLE=0
  RESTORE_GCODE_STATE NAME=unloading_filament

# Park toolhead
[gcode_macro M125]
gcode:
  SAVE_GCODE_STATE NAME=parking
  #M117 Parking toolhead
  G91
  G1 Z20 F600 # move up 20 mm
  G90
  G1 X125 Y0 F4000 # move to park position
  RESTORE_GCODE_STATE NAME=parking

# Beeper
[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=_BEEPER_pin VALUE=0.1 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=_BEEPER_pin VALUE=0

[menu __main __temp __preheat_plap]
type: list
name: Preheat PLA+

[menu __main __temp __preheat_plap __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S65
    M104 S204

[menu __main __temp __preheat_plap __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S204

[menu __main __temp __preheat_plap __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S65

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  3.106250, 3.062500, 3.018750, 2.993750, 2.993750, 2.956250, 2.920625, 2.895000, 2.883750, 2.862500, 2.860625, 2.873750
#*# 	  3.154375, 3.141250, 3.051250, 3.005000, 3.001875, 2.958750, 2.925000, 2.908750, 2.886875, 2.880000, 2.895000, 2.876250
#*# 	  3.105625, 3.079375, 3.003750, 2.948125, 2.927500, 2.919375, 2.880625, 2.890625, 2.859375, 2.859375, 2.881875, 2.890625
#*# 	  3.124375, 3.076875, 3.021875, 2.983750, 2.953750, 2.926875, 2.899375, 2.901250, 2.884375, 2.885000, 2.898125, 2.878750
#*# 	  3.087500, 3.043750, 2.990625, 2.950000, 2.930000, 2.890000, 2.883125, 2.878750, 2.880625, 2.866875, 2.890000, 2.891250
#*# 	  3.124375, 3.074375, 3.014375, 2.983125, 2.955000, 2.925625, 2.907500, 2.920625, 2.910625, 2.901250, 2.916875, 2.893750
#*# 	  3.104375, 3.047500, 2.995625, 2.960000, 2.947500, 2.903750, 2.891875, 2.913750, 2.883750, 2.900625, 2.914375, 2.938125
#*# 	  3.133750, 3.095625, 3.033125, 2.993125, 2.976250, 2.955625, 2.934375, 2.936250, 2.926875, 2.941250, 2.947500, 2.937500
#*# 	  3.106250, 3.062500, 3.005000, 2.972500, 2.957500, 2.946875, 2.926250, 2.936875, 2.923750, 2.933750, 2.958125, 2.980625
#*# 	  3.144375, 3.097500, 3.025000, 3.004375, 2.989375, 2.972500, 2.952500, 2.966875, 2.965625, 2.978750, 3.006875, 3.005625
#*# 	  3.130000, 3.116875, 3.013125, 2.972500, 2.966250, 2.945000, 2.946875, 2.955000, 2.958750, 2.957500, 2.997500, 3.046875
#*# 	  3.138750, 3.091250, 3.021875, 2.987500, 2.966875, 2.952500, 2.961250, 2.976875, 2.981875, 3.001250, 3.045625, 3.056875
#*# tension = 0.4
#*# min_x = 10.0
#*# algo = bicubic
#*# y_count = 12
#*# mesh_y_pps = 3
#*# min_y = 10.0
#*# x_count = 12
#*# max_y = 214.92999999999998
#*# mesh_x_pps = 3
#*# max_x = 224.94
#*#
#*# [bltouch]
#*# z_offset = 1.800
#*#
#*# [stepper_z]
#*# position_endstop = 1.225
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 20.101
#*# pid_ki = 1.441
#*# pid_kd = 70.101
